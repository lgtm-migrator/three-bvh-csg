{"mappings":"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","sources":["node_modules/three/examples/jsm/controls/TransformControls.js"],"sourcesContent":["import {\n\tBoxGeometry,\n\tBufferGeometry,\n\tCylinderGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronGeometry,\n\tPlaneGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereGeometry,\n\tTorusGeometry,\n\tVector3\n} from 'three';\n\nconst _raycaster = new Raycaster();\n\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n\tX: new Vector3( 1, 0, 0 ),\n\tY: new Vector3( 0, 1, 0 ),\n\tZ: new Vector3( 0, 0, 1 )\n};\n\nconst _changeEvent = { type: 'change' };\nconst _mouseDownEvent = { type: 'mouseDown' };\nconst _mouseUpEvent = { type: 'mouseUp', mode: null };\nconst _objectChangeEvent = { type: 'objectChange' };\n\nclass TransformControls extends Object3D {\n\n\tconstructor( camera, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document;\n\n\t\t}\n\n\t\tthis.isTransformControls = true;\n\n\t\tthis.visible = false;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\tconst _gizmo = new TransformControlsGizmo();\n\t\tthis._gizmo = _gizmo;\n\t\tthis.add( _gizmo );\n\n\t\tconst _plane = new TransformControlsPlane();\n\t\tthis._plane = _plane;\n\t\tthis.add( _plane );\n\n\t\tconst scope = this;\n\n\t\t// Defined getter, setter and store for a property\n\t\tfunction defineProperty( propName, defaultValue ) {\n\n\t\t\tlet propValue = defaultValue;\n\n\t\t\tObject.defineProperty( scope, propName, {\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\t\tpropValue = value;\n\t\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: propName + '-changed', value: value } );\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tscope[ propName ] = defaultValue;\n\t\t\t_plane[ propName ] = defaultValue;\n\t\t\t_gizmo[ propName ] = defaultValue;\n\n\t\t}\n\n\t\t// Define properties with getters/setter\n\t\t// Setting the defined property will automatically trigger change event\n\t\t// Defined properties are passed down to gizmo and plane\n\n\t\tdefineProperty( 'camera', camera );\n\t\tdefineProperty( 'object', undefined );\n\t\tdefineProperty( 'enabled', true );\n\t\tdefineProperty( 'axis', null );\n\t\tdefineProperty( 'mode', 'translate' );\n\t\tdefineProperty( 'translationSnap', null );\n\t\tdefineProperty( 'rotationSnap', null );\n\t\tdefineProperty( 'scaleSnap', null );\n\t\tdefineProperty( 'space', 'world' );\n\t\tdefineProperty( 'size', 1 );\n\t\tdefineProperty( 'dragging', false );\n\t\tdefineProperty( 'showX', true );\n\t\tdefineProperty( 'showY', true );\n\t\tdefineProperty( 'showZ', true );\n\n\t\t// Reusable utility variables\n\n\t\tconst worldPosition = new Vector3();\n\t\tconst worldPositionStart = new Vector3();\n\t\tconst worldQuaternion = new Quaternion();\n\t\tconst worldQuaternionStart = new Quaternion();\n\t\tconst cameraPosition = new Vector3();\n\t\tconst cameraQuaternion = new Quaternion();\n\t\tconst pointStart = new Vector3();\n\t\tconst pointEnd = new Vector3();\n\t\tconst rotationAxis = new Vector3();\n\t\tconst rotationAngle = 0;\n\t\tconst eye = new Vector3();\n\n\t\t// TODO: remove properties unused in plane and gizmo\n\n\t\tdefineProperty( 'worldPosition', worldPosition );\n\t\tdefineProperty( 'worldPositionStart', worldPositionStart );\n\t\tdefineProperty( 'worldQuaternion', worldQuaternion );\n\t\tdefineProperty( 'worldQuaternionStart', worldQuaternionStart );\n\t\tdefineProperty( 'cameraPosition', cameraPosition );\n\t\tdefineProperty( 'cameraQuaternion', cameraQuaternion );\n\t\tdefineProperty( 'pointStart', pointStart );\n\t\tdefineProperty( 'pointEnd', pointEnd );\n\t\tdefineProperty( 'rotationAxis', rotationAxis );\n\t\tdefineProperty( 'rotationAngle', rotationAngle );\n\t\tdefineProperty( 'eye', eye );\n\n\t\tthis._offset = new Vector3();\n\t\tthis._startNorm = new Vector3();\n\t\tthis._endNorm = new Vector3();\n\t\tthis._cameraScale = new Vector3();\n\n\t\tthis._parentPosition = new Vector3();\n\t\tthis._parentQuaternion = new Quaternion();\n\t\tthis._parentQuaternionInv = new Quaternion();\n\t\tthis._parentScale = new Vector3();\n\n\t\tthis._worldScaleStart = new Vector3();\n\t\tthis._worldQuaternionInv = new Quaternion();\n\t\tthis._worldScale = new Vector3();\n\n\t\tthis._positionStart = new Vector3();\n\t\tthis._quaternionStart = new Quaternion();\n\t\tthis._scaleStart = new Vector3();\n\n\t\tthis._getPointer = getPointer.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerHover = onPointerHover.bind( this );\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tupdateMatrixWorld() {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( this._parentPosition, this._parentQuaternion, this._parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( this.worldPosition, this.worldQuaternion, this._worldScale );\n\n\t\t\tthis._parentQuaternionInv.copy( this._parentQuaternion ).invert();\n\t\t\tthis._worldQuaternionInv.copy( this.worldQuaternion ).invert();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( this.cameraPosition, this.cameraQuaternion, this._cameraScale );\n\n\t\tthis.eye.copy( this.cameraPosition ).sub( this.worldPosition ).normalize();\n\n\t\tsuper.updateMatrixWorld( this );\n\n\t}\n\n\tpointerHover( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst intersect = intersectObjectWithRay( this._gizmo.picker[ this.mode ], _raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t}\n\n\tpointerDown( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tthis._positionStart.copy( this.object.position );\n\t\t\t\tthis._quaternionStart.copy( this.object.quaternion );\n\t\t\t\tthis._scaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart );\n\n\t\t\t\tthis.pointStart.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\t_mouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseDownEvent );\n\n\t\t}\n\n\t}\n\n\tpointerMove( pointer ) {\n\n\t\tconst axis = this.axis;\n\t\tconst mode = this.mode;\n\t\tconst object = this.object;\n\t\tlet space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tthis.pointEnd.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) this._offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) this._offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) this._offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._quaternionStart ).divide( this._parentScale );\n\n\t\t\t} else {\n\n\t\t\t\tthis._offset.applyQuaternion( this._parentQuaternionInv ).divide( this._parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( this._offset ).add( this._positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( this._quaternionStart ).invert() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( this._quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tlet d = this.pointEnd.length() / this.pointStart.length();\n\n\t\t\t\tif ( this.pointEnd.dot( this.pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( this.pointStart );\n\t\t\t\t_tempVector2.copy( this.pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( this._worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( this._scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tconst ROTATION_SPEED = 20 / this.worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this.eye );\n\t\t\t\tthis.rotationAngle = this.pointEnd.angleTo( this.pointStart );\n\n\t\t\t\tthis._startNorm.copy( this.pointStart ).normalize();\n\t\t\t\tthis._endNorm.copy( this.pointEnd ).normalize();\n\n\t\t\t\tthis.rotationAngle *= ( this._endNorm.cross( this._startNorm ).dot( this.eye ) < 0 ? 1 : - 1 );\n\n\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this._offset ).cross( this.eye ).normalize();\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.copy( this.rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\tthis.rotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.cross( this.eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) this.rotationAngle = Math.round( this.rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( this._quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\tthis.rotationAxis.applyQuaternion( this._parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( this._quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( _changeEvent );\n\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t}\n\n\tpointerUp( pointer ) {\n\n\t\tif ( pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\t_mouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t}\n\n\t// Set current object\n\tattach( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t}\n\n\t// Detatch from object\n\tdetach() {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t}\n\n\treset() {\n\n\t\tif ( ! this.enabled ) return;\n\n\t\tif ( this.dragging ) {\n\n\t\t\tthis.object.position.copy( this._positionStart );\n\t\t\tthis.object.quaternion.copy( this._quaternionStart );\n\t\t\tthis.object.scale.copy( this._scaleStart );\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\t\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t\t\tthis.pointStart.copy( this.pointEnd );\n\n\t\t}\n\n\t}\n\n\tgetRaycaster() {\n\n\t\treturn _raycaster;\n\n\t}\n\n\t// TODO: deprecate\n\n\tgetMode() {\n\n\t\treturn this.mode;\n\n\t}\n\n\tsetMode( mode ) {\n\n\t\tthis.mode = mode;\n\n\t}\n\n\tsetTranslationSnap( translationSnap ) {\n\n\t\tthis.translationSnap = translationSnap;\n\n\t}\n\n\tsetRotationSnap( rotationSnap ) {\n\n\t\tthis.rotationSnap = rotationSnap;\n\n\t}\n\n\tsetScaleSnap( scaleSnap ) {\n\n\t\tthis.scaleSnap = scaleSnap;\n\n\t}\n\n\tsetSize( size ) {\n\n\t\tthis.size = size;\n\n\t}\n\n\tsetSpace( space ) {\n\n\t\tthis.space = space;\n\n\t}\n\n\tupdate() {\n\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t}\n\n}\n\n// mouse / touch event handlers\n\nfunction getPointer( event ) {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement ) {\n\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tbutton: event.button\n\t\t};\n\n\t} else {\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\tx: ( event.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\ty: - ( event.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\tbutton: event.button\n\t\t};\n\n\t}\n\n}\n\nfunction onPointerHover( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tswitch ( event.pointerType ) {\n\n\t\tcase 'mouse':\n\t\tcase 'pen':\n\t\t\tthis.pointerHover( this._getPointer( event ) );\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tif ( ! document.pointerLockElement ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t}\n\n\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerHover( this._getPointer( event ) );\n\tthis.pointerDown( this._getPointer( event ) );\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.pointerMove( this._getPointer( event ) );\n\n}\n\nfunction onPointerUp( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerUp( this._getPointer( event ) );\n\n}\n\nfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\tconst allIntersections = raycaster.intersectObject( object, true );\n\n\tfor ( let i = 0; i < allIntersections.length; i ++ ) {\n\n\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\treturn allIntersections[ i ];\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3( 0, 1, 0 );\nconst _zeroVector = new Vector3( 0, 0, 0 );\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\n\nconst _unitX = new Vector3( 1, 0, 0 );\nconst _unitY = new Vector3( 0, 1, 0 );\nconst _unitZ = new Vector3( 0, 0, 1 );\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\n\nclass TransformControlsGizmo extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isTransformControlsGizmo = true;\n\n\t\tthis.type = 'TransformControlsGizmo';\n\n\t\t// shared materials\n\n\t\tconst gizmoMaterial = new MeshBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tconst gizmoLineMaterial = new LineBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\t// Make unique material for each axis/color\n\n\t\tconst matInvisible = gizmoMaterial.clone();\n\t\tmatInvisible.opacity = 0.15;\n\n\t\tconst matHelper = gizmoLineMaterial.clone();\n\t\tmatHelper.opacity = 0.5;\n\n\t\tconst matRed = gizmoMaterial.clone();\n\t\tmatRed.color.setHex( 0xff0000 );\n\n\t\tconst matGreen = gizmoMaterial.clone();\n\t\tmatGreen.color.setHex( 0x00ff00 );\n\n\t\tconst matBlue = gizmoMaterial.clone();\n\t\tmatBlue.color.setHex( 0x0000ff );\n\n\t\tconst matRedTransparent = gizmoMaterial.clone();\n\t\tmatRedTransparent.color.setHex( 0xff0000 );\n\t\tmatRedTransparent.opacity = 0.5;\n\n\t\tconst matGreenTransparent = gizmoMaterial.clone();\n\t\tmatGreenTransparent.color.setHex( 0x00ff00 );\n\t\tmatGreenTransparent.opacity = 0.5;\n\n\t\tconst matBlueTransparent = gizmoMaterial.clone();\n\t\tmatBlueTransparent.color.setHex( 0x0000ff );\n\t\tmatBlueTransparent.opacity = 0.5;\n\n\t\tconst matWhiteTransparent = gizmoMaterial.clone();\n\t\tmatWhiteTransparent.opacity = 0.25;\n\n\t\tconst matYellowTransparent = gizmoMaterial.clone();\n\t\tmatYellowTransparent.color.setHex( 0xffff00 );\n\t\tmatYellowTransparent.opacity = 0.25;\n\n\t\tconst matYellow = gizmoMaterial.clone();\n\t\tmatYellow.color.setHex( 0xffff00 );\n\n\t\tconst matGray = gizmoMaterial.clone();\n\t\tmatGray.color.setHex( 0x787878 );\n\n\t\t// reusable geometry\n\n\t\tconst arrowGeometry = new CylinderGeometry( 0, 0.04, 0.1, 12 );\n\t\tarrowGeometry.translate( 0, 0.05, 0 );\n\n\t\tconst scaleHandleGeometry = new BoxGeometry( 0.08, 0.08, 0.08 );\n\t\tscaleHandleGeometry.translate( 0, 0.04, 0 );\n\n\t\tconst lineGeometry = new BufferGeometry();\n\t\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\t\tconst lineGeometry2 = new CylinderGeometry( 0.0075, 0.0075, 0.5, 3 );\n\t\tlineGeometry2.translate( 0, 0.25, 0 );\n\n\t\tfunction CircleGeometry( radius, arc ) {\n\n\t\t\tconst geometry = new TorusGeometry( radius, 0.0075, 3, 64, arc * Math.PI * 2 );\n\t\t\tgeometry.rotateY( Math.PI / 2 );\n\t\t\tgeometry.rotateX( Math.PI / 2 );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\t\tfunction TranslateHelperGeometry() {\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\t\tconst gizmoTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, - 0.5, 0 ], [ Math.PI, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), null, [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent.clone() ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperTranslate = {\n\t\t\tSTART: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tEND: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tDELTA: [\n\t\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 1 ), matGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matRed ) ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matGreen ), null, [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matBlue ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.75, 1 ), matYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperRotate = {\n\t\t\tAXIS: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( new SphereGeometry( 0.25, 10, 8 ), matInvisible ) ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.75, 0.1, 2, 24 ), matInvisible ) ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, - 0.5, 0 ], [ 0, 0, Math.PI ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.1, 0.1, 0.1 ), matWhiteTransparent.clone() ) ],\n\t\t\t]\n\t\t};\n\n\t\tconst pickerScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]],\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 0 ]],\n\t\t\t]\n\t\t};\n\n\t\tconst helperScale = {\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\t\tfunction setupGizmo( gizmoMap ) {\n\n\t\t\tconst gizmo = new Object3D();\n\n\t\t\tfor ( const name in gizmoMap ) {\n\n\t\t\t\tfor ( let i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\tconst object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\t\tconst position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\tconst rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\t\tconst scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\t\tconst tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\t\tobject.name = name;\n\t\t\t\t\tobject.tag = tag;\n\n\t\t\t\t\tif ( position ) {\n\n\t\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scale ) {\n\n\t\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tconst tempGeometry = object.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\t\tgizmo.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn gizmo;\n\n\t\t}\n\n\t\t// Gizmo creation\n\n\t\tthis.gizmo = {};\n\t\tthis.picker = {};\n\t\tthis.helper = {};\n\n\t\tthis.add( this.gizmo[ 'translate' ] = setupGizmo( gizmoTranslate ) );\n\t\tthis.add( this.gizmo[ 'rotate' ] = setupGizmo( gizmoRotate ) );\n\t\tthis.add( this.gizmo[ 'scale' ] = setupGizmo( gizmoScale ) );\n\t\tthis.add( this.picker[ 'translate' ] = setupGizmo( pickerTranslate ) );\n\t\tthis.add( this.picker[ 'rotate' ] = setupGizmo( pickerRotate ) );\n\t\tthis.add( this.picker[ 'scale' ] = setupGizmo( pickerScale ) );\n\t\tthis.add( this.helper[ 'translate' ] = setupGizmo( helperTranslate ) );\n\t\tthis.add( this.helper[ 'rotate' ] = setupGizmo( helperRotate ) );\n\t\tthis.add( this.helper[ 'scale' ] = setupGizmo( helperScale ) );\n\n\t\t// Pickers should be hidden always\n\n\t\tthis.picker[ 'translate' ].visible = false;\n\t\tthis.picker[ 'rotate' ].visible = false;\n\t\tthis.picker[ 'scale' ].visible = false;\n\n\t}\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst space = ( this.mode === 'scale' ) ? 'local' : this.space; // scale always oriented to local rotation\n\n\t\tconst quaternion = ( space === 'local' ) ? this.worldQuaternion : _identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.gizmo[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.gizmo[ 'scale' ].visible = this.mode === 'scale';\n\n\t\tthis.helper[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.helper[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.helper[ 'scale' ].visible = this.mode === 'scale';\n\n\n\t\tlet handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( let i = 0; i < handles.length; i ++ ) {\n\n\t\t\tconst handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tlet factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 4 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t_alignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( _zeroVector, _alignVector, _unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( _tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\t_tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n\t\t\t\t\thandle.scale.copy( _tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tconst AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\tconst PLANE_HIDE_TRESHOLD = 0.2;\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\t_tempQuaternion2.copy( quaternion );\n\t\t\t\t_alignVector.copy( this.eye ).applyQuaternion( _tempQuaternion.copy( quaternion ).invert() );\n\n\t\t\t\tif ( handle.name.search( 'E' ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( this.eye, _zeroVector, _unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitX, Math.atan2( - _alignVector.y, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitY, Math.atan2( _alignVector.x, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitZ, Math.atan2( _alignVector.y, _alignVector.x ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'X' ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Y' ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Z' ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'E' ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( this.enabled && this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n//\n\nclass TransformControlsPlane extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper(\n\t\t\tnew PlaneGeometry( 100000, 100000, 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t\t);\n\n\t\tthis.isTransformControlsPlane = true;\n\n\t\tthis.type = 'TransformControlsPlane';\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t_v1.copy( _unitX ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v2.copy( _unitY ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v3.copy( _unitZ ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\t_alignVector.copy( _v2 );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v1 );\n\t\t\t\t\t\t_dirVector.copy( _v1 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v2 );\n\t\t\t\t\t\t_dirVector.copy( _v2 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v3 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\t_dirVector.copy( _v3 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\t_dirVector.copy( _v1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\t_alignVector.copy( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v2 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\t_dirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\t_dirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( _dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\t_tempMatrix.lookAt( _tempVector.set( 0, 0, 0 ), _dirVector, _alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _tempMatrix );\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"names":["$ilwiq","parcelRequire","$b9499708d6cce9b7$var$_raycaster","Raycaster","$b9499708d6cce9b7$var$_tempVector","Vector3","$b9499708d6cce9b7$var$_tempVector2","$b9499708d6cce9b7$var$_tempQuaternion","Quaternion","$b9499708d6cce9b7$var$_unit","X","Y","Z","$b9499708d6cce9b7$var$_changeEvent","type","$b9499708d6cce9b7$var$_mouseDownEvent","$b9499708d6cce9b7$var$_mouseUpEvent","mode","$b9499708d6cce9b7$var$_objectChangeEvent","$b9499708d6cce9b7$export$198e80c116632110","Object3D","constructor","camera","domElement","super","undefined","console","warn","document","this","isTransformControls","visible","style","touchAction","_gizmo","$b9499708d6cce9b7$export$c2ae06a69fb9d31f","add","_plane","$b9499708d6cce9b7$export$c0ab73045548e2ca","scope","defineProperty","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","$b9499708d6cce9b7$var$getPointer","bind","_onPointerDown","$b9499708d6cce9b7$var$onPointerDown","_onPointerHover","$b9499708d6cce9b7$var$onPointerHover","_onPointerMove","$b9499708d6cce9b7$var$onPointerMove","_onPointerUp","$b9499708d6cce9b7$var$onPointerUp","addEventListener","updateMatrixWorld","object","parent","error","matrixWorld","decompose","copy","invert","sub","normalize","pointerHover","pointer","dragging","setFromCamera","intersect","$b9499708d6cce9b7$var$intersectObjectWithRay","picker","axis","name","pointerDown","button","planeIntersect","position","quaternion","scale","point","pointerMove","space","applyQuaternion","indexOf","x","y","z","divide","translationSnap","search","Math","round","setFromMatrixPosition","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","rotationAngle","angleTo","cross","rotationSnap","setFromAxisAngle","pointerUp","dispose","removeEventListener","traverse","child","geometry","material","attach","detach","reset","enabled","getRaycaster","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","event","ownerDocument","pointerLockElement","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","setPointerCapture","pointerId","releasePointerCapture","raycaster","includeInvisible","allIntersections","intersectObject","i","$b9499708d6cce9b7$var$_tempEuler","Euler","$b9499708d6cce9b7$var$_alignVector","$b9499708d6cce9b7$var$_zeroVector","$b9499708d6cce9b7$var$_lookAtMatrix","Matrix4","$b9499708d6cce9b7$var$_tempQuaternion2","$b9499708d6cce9b7$var$_identityQuaternion","$b9499708d6cce9b7$var$_dirVector","$b9499708d6cce9b7$var$_tempMatrix","$b9499708d6cce9b7$var$_unitX","$b9499708d6cce9b7$var$_unitY","$b9499708d6cce9b7$var$_unitZ","$b9499708d6cce9b7$var$_v1","$b9499708d6cce9b7$var$_v2","$b9499708d6cce9b7$var$_v3","isTransformControlsGizmo","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","LineBasicMaterial","matInvisible","clone","opacity","matHelper","matRed","color","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matGray","arrowGeometry","CylinderGeometry","translate","scaleHandleGeometry","BoxGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","lineGeometry2","CircleGeometry","radius","arc","TorusGeometry","PI","rotateY","rotateX","gizmoTranslate","Mesh","XYZ","OctahedronGeometry","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","Line","TranslateHelperGeometry","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","SphereGeometry","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","rotation","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","helper","force","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_color","_opacity","split","some","a","setFromEuler","PlaneGeometry","wireframe","side","DoubleSide","isTransformControlsPlane"],"version":3,"file":"hierarchy.e9daf703.js.map"}