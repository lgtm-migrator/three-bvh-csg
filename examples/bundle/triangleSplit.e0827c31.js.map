{"mappings":"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","sources":["examples/triangleSplit.js"],"sourcesContent":["import * as THREE from 'three';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { TriangleSplitter, TriangleSetHelper } from '..';\n\nlet renderer, camera, scene;\nlet controls, transformControls;\nlet planeObject, planeHelper;\nlet splitter, frontClippedTris, backClippedTris, coplanarTris, initialTris;\nlet plane = new THREE.Plane();\nlet _vec = new THREE.Vector3();\n\nconst ogTris = [\n\tnew THREE.Triangle(\n\t\tnew THREE.Vector3( - 0.25, 1.25, 0.25 ),\n\t\tnew THREE.Vector3( - 0.25, 0.25, 0.25 ),\n\t\tnew THREE.Vector3( - 1.25, 1.25, 0.25 ),\n\t)\n];\n\nconst tris = [\n\tnew THREE.Triangle(\n\t\tnew THREE.Vector3( - 0.5, 0.5, - 0.5 ),\n\t\tnew THREE.Vector3( - 0.5, - 0.5, - 0.5 ),\n\t\tnew THREE.Vector3( - 0.5, 0.5, 0.5 ),\n\t),\n\tnew THREE.Triangle(\n\t\tnew THREE.Vector3( - 0.5, 0.5, - 0.5 ),\n\t\tnew THREE.Vector3( - 0.5, 0.5, 0.5 ),\n\t\tnew THREE.Vector3( 0.5, 0.5, - 0.5 ),\n\t),\n\t// new THREE.Triangle(\n\t// \tnew THREE.Vector3( -0.5, 0.5, 0.5 ),\n\t// \tnew THREE.Vector3( 0.5, 0.5, 0.5 ),\n\t// \tnew THREE.Vector3( 0.5, 0.5, -0.5 ),\n\t// ),\n];\n\ninit();\nrender();\n\nfunction init() {\n\n\tconst bgColor = 0x111111;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0xffca28, 20, 60 );\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 1 );\n\tlight.position.set( - 1, 2, 3 );\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xb0bec5, 0.1 ) );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 1, 2, 4 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\ttransformControls = new TransformControls( camera, renderer.domElement );\n\ttransformControls.addEventListener( 'dragging-changed', e => {\n\n\t\tcontrols.enabled = ! e.value;\n\n\t} );\n\tscene.add( transformControls );\n\n\tplaneObject = new THREE.Object3D();\n\ttransformControls.attach( planeObject );\n\tscene.add( planeObject );\n\tplaneObject.position.z = 0.5;\n\tplaneObject.rotation.y = Math.PI / 2;\n\n\tplaneHelper = new THREE.PlaneHelper( plane );\n\tscene.add( planeHelper );\n\n\tinitialTris = new TriangleSetHelper();\n\tfrontClippedTris = new TriangleSetHelper();\n\n\tbackClippedTris = new TriangleSetHelper();\n\tbackClippedTris.color.set( 0xff0000 );\n\n\tcoplanarTris = new TriangleSetHelper();\n\tcoplanarTris.color.set( 0x0000ff );\n\n\tsplitter = new TriangleSplitter();\n\n\tscene.add( initialTris, frontClippedTris, backClippedTris, coplanarTris );\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\t_vec.set( 0, 0, 1 ).transformDirection( planeObject.matrixWorld );\n\tplane.setFromNormalAndCoplanarPoint( _vec, planeObject.position );\n\n\tsplitter.initialize( ogTris );\n\ttris.forEach( t => {\n\n\t\tsplitter.splitByTriangle( t );\n\n\t} );\n\n\t// logTriangleDefinitions( ...splitter.triangles );\n\n\t// plane.copy( splitter.triangles[ 0 ].__plane )\n\t// console.log( splitter.triangles.map( t => t.side ) )\n\tplaneHelper.visible = false;\n\ttransformControls.visible = false;\n\ttransformControls.enabled = false;\n\n\tfrontClippedTris.setTriangles( splitter.triangles.filter( t => t.side === 1 || t.side === null ) );\n\tfrontClippedTris.position.y = - 2;\n\n\tbackClippedTris.setTriangles( splitter.triangles.filter( t => t.side === - 1 ) );\n\tbackClippedTris.position.y = - 2;\n\n\tcoplanarTris.setTriangles( splitter.triangles.filter( t => t.side === 0 ) );\n\tcoplanarTris.position.y = - 2;\n\n\tinitialTris.setTriangles( [ ...ogTris, ...tris ] );\n\n\trenderer.render( scene, camera );\n\n}\n"],"names":["$ilwiq","parcelRequire","$1d912cde2de9d823$var$renderer","$1d912cde2de9d823$var$camera","$1d912cde2de9d823$var$scene","$1d912cde2de9d823$var$controls","$1d912cde2de9d823$var$transformControls","$1d912cde2de9d823$var$planeObject","$1d912cde2de9d823$var$planeHelper","$1d912cde2de9d823$var$splitter","$1d912cde2de9d823$var$frontClippedTris","$1d912cde2de9d823$var$backClippedTris","$1d912cde2de9d823$var$coplanarTris","$1d912cde2de9d823$var$initialTris","$1d912cde2de9d823$var$plane","Plane","$1d912cde2de9d823$var$_vec","Vector3","$1d912cde2de9d823$var$ogTris","Triangle","$1d912cde2de9d823$var$tris","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","setClearColor","outputEncoding","sRGBEncoding","document","body","appendChild","domElement","Scene","fog","Fog","light","DirectionalLight","position","set","add","AmbientLight","PerspectiveCamera","far","updateProjectionMatrix","$5Rd1x","OrbitControls","$fUhpq","TransformControls","addEventListener","e","enabled","value","Object3D","attach","z","rotation","y","Math","PI","PlaneHelper","$4CEV9","TriangleSetHelper","color","TriangleSplitter","aspect","$1d912cde2de9d823$var$init","$1d912cde2de9d823$var$render","requestAnimationFrame","transformDirection","matrixWorld","setFromNormalAndCoplanarPoint","initialize","forEach","t","splitByTriangle","visible","setTriangles","triangles","filter","side","render"],"version":3,"file":"triangleSplit.e0827c31.js.map"}